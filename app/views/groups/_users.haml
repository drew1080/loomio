%input#group_id{ type: "hidden", value: @group.id }
-user_is_group_admin = (current_user.memberships.find_by_group_id(@group.id).access_level == 'admin')
-unless @group.membership_requests.empty?
  #user-requests
    %h3 User Requests:
    %ul.unstyled
      -@group.membership_requests.each do |mr|
        %li
          -user = mr.user
          =user.name
          =link_to 'approve', membership_path(mr, 
            {:membership => {:access_level => 'member'}}), 
            :method => :put, 
            :confirm => "Are you sure you want to add #{mr.user.email} to the group?"
          -confirm = "Are you sure you want to ignore the member "
          -confirm << "request from #{mr.user.email}?"
          =link_to "ignore", membership_path(mr), method: :delete, 
            :confirm => "Are you sure you want to ignore the member request from #{mr.user.email}?"
%h3 Users:
%p Autocomplete will help find existing tags, or enter a comma at the end to make a new tag.
%ul.unstyled{:id => "users-list"}
  -@group.users.each do |user|
    %li{:id => user.id}
      -m = user.memberships.find_by_group_id(@group.id)
      =user.name
      -# =m.access_level
      -if user_is_group_admin
        =link_to "edit", edit_membership_path(m)
        |
        =link_to "remove", m, method: :delete, 
          confirm: "Are you sure you wish to remove #{user.email} from the group?"
        %br
        %b Tags:
        -#=user.group_tags.join(", ") if user.group_tags
        %input{:id => "user-tags-" + user.id.to_s}
        
